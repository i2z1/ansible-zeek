{{ ansible_managed | comment }}
##! Local site policy. Customize as appropriate.
##!
##! This file will not be overwritten when upgrading or reinstalling!

{% if not (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int <= 7) %}
{# centos7=zeek 3.0, ubuntu 18.04=zeek 3.2 #}
# Installation-wide salt value that is used in some digest hashes, e.g., for
# the creation of file IDs. Please change this to a hard to guess value.
redef digest_salt = "{{ salt | default('Please change this value.') }}";

{% endif %}
# Process packets despite bad checksums.
redef ignore_checksums = T;

# This script logs which scripts were loaded during each run.
@load misc/loaded-scripts

# Apply the default tuning scripts for common tuning settings.
# Remove in v7.1 The policy/tuning/defaults package is deprecated. The options set here are now the defaults for Zeek in general.
#@load tuning/defaults

# Estimate and log capture loss.
@load misc/capture-loss

# Enable logging of memory, packet and lag statistics.
@load misc/stats

# Load the scan detection script.  It's disabled by default because
# it often causes performance issues.
#@load misc/scan

# Detect traceroute being run on the network. This could possibly cause
# performance trouble when there are a lot of traceroutes on your network.
# Enable cautiously.
#@load misc/detect-traceroute

# Generate notices when vulnerable versions of software are discovered.
# The default is to only monitor software found in the address space defined
# as "local".  Refer to the software framework's documentation for more
# information.
@load frameworks/software/vulnerable

# Detect software changing (e.g. attacker installing hacked SSHD).
@load frameworks/software/version-changes

# This adds signatures to detect cleartext forward and reverse windows shells.
@load-sigs frameworks/signatures/detect-windows-shells

# Load all of the scripts that detect software in various protocols.
@load protocols/ftp/software
@load protocols/smtp/software
@load protocols/ssh/software
@load protocols/http/software
# The detect-webapps script could possibly cause performance trouble when
# running on live traffic.  Enable it cautiously.
#@load protocols/http/detect-webapps

# This script detects DNS results pointing toward your Site::local_nets
# where the name is not part of your local DNS zone and is being hosted
# externally.  Requires that the Site::local_zones variable is defined.
@load protocols/dns/detect-external-names

# Script to detect various activity in FTP sessions.
@load protocols/ftp/detect

# Scripts that do asset tracking.
@load protocols/conn/known-hosts
@load protocols/conn/known-services
@load protocols/ssl/known-certs

# This script enables SSL/TLS certificate validation.
@load protocols/ssl/validate-certs

# This script prevents the logging of SSL CA certificates in x509.log
@load protocols/ssl/log-hostcerts-only

# Uncomment the following line to check each SSL certificate hash against the ICSI
# certificate notary service; see http://notary.icsi.berkeley.edu .
# @load protocols/ssl/notary

# If you have GeoIP support built in, do some geographic detections and
# logging for SSH traffic.
@load protocols/ssh/geo-data
# Detect hosts doing SSH bruteforce attacks.
@load protocols/ssh/detect-bruteforcing
# Detect logins using "interesting" hostnames.
@load protocols/ssh/interesting-hostnames

# Detect SQL injection attacks.
@load protocols/http/detect-sqli

# Log HTTP server header names
@load protocols/http/header-names
redef HTTP::log_server_header_names = T;

#### Extract files from http/ftp ####
#redef HTTP::extract_file_types += /application\/.*/;	## WARNING! be careful. may log tons of files.
#redef HTTP::extract_file_types = /application\/x-dosexec/;
#redef FTP::extract_file_types = /application\/x-dosexec/;
#redef SMTP::extract_file_types = /application\/x-dosexec/;
#redef IRC::extract_file_types = /application\/x-dosexec/;
#redef HTTP::extraction_prefix = "{{ bro_extractedfiles }}/http/http-item";
#redef FTP::extraction_prefix = "{{ bro_extractedfiles }}/ftp/ftp-file";
#redef SMTP::extraction_prefix = "{{ bro_extractedfiles }}/smtp/smtp-file";
#redef IRC::extraction_prefix = "{{ bro_extractedfiles }}/irc/irc-file";

## Enable password logging
redef FTP::default_capture_password = T;
redef HTTP::default_capture_password = T;

#### Network File Handling ####

@load base/protocols/smb
@load policy/protocols/conn/vlan-logging
@load policy/protocols/conn/mac-logging

# Enable MD5 and SHA1 hashing for all files.
@load frameworks/files/hash-all-files

# Detect SHA1 sums in Team Cymru's Malware Hash Registry.
@load frameworks/files/detect-MHR

# Extend email alerting to include hostnames
@load policy/frameworks/notice/extend-email/hostnames

# Uncomment the following line to enable detection of the heartbleed attack. Enabling
# this might impact performance a bit.
@load policy/protocols/ssl/heartbleed

{% if broids_vlanlogging_enable is defined and broids_vlanlogging_enable %}
# Uncomment the following line to enable logging of connection VLANs. Enabling
# this adds two VLAN fields to the conn.log file.
@load policy/protocols/conn/vlan-logging

{% endif %}
{% if broids_maclogging_enable is defined and broids_maclogging_enable %}
# Uncomment the following line to enable logging of link-layer addresses. Enabling
# this adds the link-layer address for each connection endpoint to the conn.log file.
@load policy/protocols/conn/mac-logging

{% endif %}
{% if broids_jsonlog_enable is defined and broids_jsonlog_enable %}
@load policy/tuning/json-logs.zeek

{% endif %}
{% if (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 9) or use_zeek_opensuse_repo|bool %}
{# Zeek 5.1 #}
@load policy/protocols/ssl/log-certs-base64
{% else %}
{# Zeek 4.0 #}
@load policy/protocols/ssl/extract-certs-pem
redef SSL::extract_certs_pem = ALL_HOSTS;
{% endif %}
@load policy/protocols/ssl/expiring-certs
redef SSL::notify_certs_expiration = ALL_HOSTS;
@load policy/frameworks/files/detect-MHR

{% if broids_pdns_enable %}
@load {{ broids_site }}/bro-pdns
redef PDNS::uri = "mysql://{{ mysql_pdns_user }}:{{ mysql_pdns_pass }}@localhost/pdns";
{% endif %}

#### Intel ####

{% if broids_misp_url != '' %}
redef Intel::read_files += {
{% for intel in broids_intels %}
    "{{ intel }}",
{% endfor %}
{% for intel in broids_misp_output %}
    "{{ intel }}",
{% endfor %}
     };
@load policy/integration/collective-intel
@load policy/frameworks/intel/seen
@load policy/frameworks/intel/do_notice
@load frameworks/intel/seen
@load frameworks/intel/do_notice

{% endif %}
# @load apt1

{% if broids_ja3_enable %}
@load {{ broids_site }}/ja3

{% endif %}
# @load {{ broids_site }}/cs-bro/bro-scripts/extensions
@load {{ broids_site }}/cs-bro/bro-scripts/rfd/detect-rfd.bro
#@load {{ broids_site }}/cs-bro/bro-scripts/shellshock/detect-shellshock.bro
#@load {{ broids_site }}/cs-bro/bro-scripts/sinkholes
#@load {{ broids_site }}/cs-bro/bro-scripts/ssdp
#@load {{ broids_site }}/cs-bro/bro-scripts/tor
#@load {{ broids_site }}/cs-bro/bro-scripts/tracked-providers
@load {{ broids_site }}/jonschipp-bro/ipmi.bro
#@load {{ broids_site }}/securitykitten-bro/bro_beacons.bro
#@load {{ broids_site }}/securitykitten-bro/bro_typosquatting.bro
#@load {{ broids_site }}/securitykitten-bro/bro_typosquatting_email.bro
# fast-flux, non-standard port dns
# errors?
#@load {{ broids_site }}/sooshie-bro/2.4-scripts/ffluxDNS.bro
#@load {{ broids_site }}/sooshie-bro/2.4-scripts/dns-bad_behavior.bro
#@load {{ broids_site }}/sooshie-bro/2.4-scripts/largeUpload.bro
#@load {{ broids_site }}/sooshie-bro/exploitkit/exploitkit.bro
#@load {{ broids_site }}/sooshie-bro/misc/multi-user-agent.bro

{% for f in broids_plugins_templates %}
@load {{ broids_site }}/{{Â f }}.zeek
{% endfor %}
